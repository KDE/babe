
CREATE TABLE ALBUMS
(
title   TEXT,
artist  TEXT,
artwork TEXT,
wiki    TEXT,
PRIMARY KEY(title, artist),
FOREIGN KEY(artist) REFERENCES artists(title)
) ;


CREATE TABLE ARTISTS
(
title   TEXT PRIMARY KEY ,
artwork TEXT ,
wiki    TEXT
) ;


CREATE TABLE MOODS
(
tag TEXT PRIMARY KEY
) ;


CREATE TABLE PLAYLISTS
(
title       TEXT PRIMARY KEY ,
MOODS_tag TEXT NOT NULL,
FOREIGN KEY(MOODS_tag) REFERENCES MOODS(tag)
) ;


CREATE TABLE SOURCES
(
url              TEXT PRIMARY KEY ,
SOURCE_TYPES_id INTEGER NOT NULL,
FOREIGN KEY(SOURCE_TYPES_id) REFERENCES SOURCES_TYPES(id)
) ;


CREATE TABLE SOURCES_TYPES
(
id   INTEGER PRIMARY KEY ,
name TEXT NOT NULL
) ;


CREATE TABLE TRACKS
(
url         TEXT PRIMARY KEY ,
sources_url TEXT  ,
track       INTEGER ,
title       TEXT  ,
artist   TEXT,
album    TEXT,
duration    INTEGER  ,
played      INTEGER  ,
babe    INTEGER  ,
stars       INTEGER ,
releaseDate DATE ,
addDate     DATE ,
lyrics     TEXT ,
genre      TEXT,
art        TEXT,
FOREIGN KEY(sources_url) REFERENCES SOURCES(url),
FOREIGN KEY(artist) REFERENCES artists(title),
FOREIGN KEY(album) REFERENCES albums(title)
) ;


CREATE TABLE TRACKS_MOODS
(
MOODS_tag  TEXT NOT NULL ,
tracks_url TEXT NOT NULL ,
FOREIGN KEY(MOODS_tag) REFERENCES MOODS(tag),
FOREIGN KEY(tracks_url) REFERENCES TRACKS(url)

) ;

CREATE TABLE TRACKS_PLAYLISTS
(
PLAYLISTS_title TEXT NOT NULL ,
TRACKS_url      TEXT NOT NULL ,
PRIMARY KEY (PLAYLISTS_title, TRACKS_url),
FOREIGN KEY(PLAYLISTS_title) REFERENCES PLAYLISTS(title),
FOREIGN KEY(TRACKS_url) REFERENCES TRACKS(url)
) ;

--First insertions

INSERT INTO SOURCES_TYPES VALUES (1,"LOCAL");
INSERT INTO SOURCES_TYPES VALUES (2,"ONLINE");
INSERT INTO SOURCES_TYPES VALUES (3,"DEVICE");


COMMIT;
